version: '3.8'

services:
  webhook-api:
    build:
      context: .
      dockerfile: src/WebhookService.Api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=WebhookService;User Id=sa;Password=P@ssw0rd;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      - sqlserver
      - redis
    networks:
      - webhook-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - webhook-network

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webhook-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: webhook-frontend
    ports:
      - "4200:4200"
    depends_on:
      - webhook-api
    networks:
      - webhook-network
    environment:
      - NODE_ENV=development

volumes:
  sqlserver_data:
  redis_data:

networks:
  webhook-network:
    driver: bridge
